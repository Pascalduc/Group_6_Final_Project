-- ------------------------------------------------------------------------------------
-- Using pgAdmin 4: PostgreSQL 11 to transform and clean the data for loading to Mongo.
-- ------------------------------------------------------------------------------------
--
-- Create the Listings table
-- -------------------------

drop table listings;

create table Listings
(id int primary key,
listing_url varchar,
host_response_rate varchar,
host_acceptance_rate varchar,
host_picture_url varchar,
street varchar,
neighbourhood_cleansed varchar,
latitude float,
longtitude float,
property_type varchar,
room_type varchar,
accomodates int,
bathrooms float,
bedrooms int,
beds int,
bed_type varchar,
amenities varchar,
price varchar,
security_deposit varchar,
cleaning_fee varchar,
extra_people varchar,
number_of_reviews int,
last_review date,
review_scores_rating int,
cancellation_policy varchar);

-- Import Data after listings table created, then do a select on listings.
select * from listings;

-- Alter the listings table, adding columns and initialize to 0 for each amenity, then
-- set amenity value as follows: 1 if exist and 0 otherwise.
-- ----------------------------------------------------------------------------------------------------
alter table listings
add column wireless_internet int default 0,
add column smoke_detector int default 0,
add column air_conditioning int default 0,
add column heating int default 0,
add column cable_tv int default 0,
add column washer int default 0,
add column dryer int default 0,
add column family_kid_friendly int default 0,
add column kitchen int default 0,
add column free_parking int default 0,
add column carbon_monoxide int default 0,
add column pets_allowed int default 0,
add column essentials int default 0,
add column checkin_24hr int default 0,
add column lock_on_bedroom_door int default 0,
add column pool int default 0,
add column hair_dryer int default 0,
add column gym int default 0,
add column wheelchair_accessible int default 0,
add column iron int default 0,
add column shampoo int default 0,
add column hangers int default 0,
add column first_aid_kit int default 0,
add column elevator int default 0;


update listings set wireless_internet = 1 where amenities like '%Wireless Internet%';
update listings set smoke_detector = 1 where amenities like '%Smoke Detector%';
update listings set air_conditioning = 1 where amenities like '%Air Conditioning%';
update listings set heating = 1 where amenities like '%Heating%';
update listings set cable_tv = 1 where amenities like '%Cable TV%';
update listings set washer = 1 where amenities like '%Washer%';
update listings set dryer = 1 where amenities like '%Dryer%';
update listings set family_kid_friendly = 1 where amenities like '%Family/Kid Friendly%';
update listings set kitchen = 1 where amenities like '%Kitchen%';
update listings set free_parking = 1 where amenities like '%Free Parking%';
update listings set carbon_monoxide = 1 where amenities like '%Carbon Monoxide Detector%';
update listings set pets_allowed = 1 where amenities like '%Pets Allowed%';
update listings set essentials = 1 where amenities like '%Essentials%';
update listings set checkin_24hr = 1 where amenities like '%24-Hour Check-in%';
update listings set lock_on_bedroom_door = 1 where amenities like '%Lock on Bedroom Door%';
update listings set pool = 1 where amenities like '%Pool%';
update listings set hair_dryer = 1 where amenities like '%Hair Dryer%';
update listings set gym = 1 where amenities like '%Gym%';
update listings set wheelchair_accessible = 1 where amenities like '%Wheelchair Accessible%';
update listings set iron = 1 where amenities like '%Iron%';
update listings set shampoo = 1 where amenities like '%Shampoo%';
update listings set hangers = 1 where amenities like '%Hangers%';
update listings set first_aid_kit = 1 where amenities like '%First Aid Kit%';
update listings set elevator = 1 where amenities like '%Elevator in Building%';

-- Create the Reviews table
-- ------------------------
drop table reviews;

create table reviews
(listing_id int not null,
date date,
comments varchar);

-- Import Data after reviews table created, then do a select on reviews.

select * from reviews;

-- Team decided to use one review per listing, so a 'distinct on' the listing_id is done.

drop table reviews_consolidated;

create table reviews_consolidated as
(select distinct on (listing_id) listing_id, comments from reviews);
	
select * from reviews_consolidated;

-- Create the listings_with_reviews table by joining the listing and reviews tables,
-- keeping the listings that do not have reviews (comments).
-- ---------------------------------------------------------------------------------
drop table listings_with_reviews;

create table listings_with_reviews as 
(select a.*, b.comments from listings a left join reviews_consolidated b on a.id = b.listing_id);

select * from listings_with_reviews;

-- Cleanup:...
-- Update columns in the listings_with_reviews table that were created as varchar because the contained
-- non numeric data:
-- 1. Set null and N/A to 0
-- 2. Remove unwanted characters ($ and ,)
-- 3. Alter column type from varchar to integer and float
-- ----------------------------------------------------------------------------------------------------
update listings_with_reviews set host_acceptance_rate = '0%' where host_acceptance_rate = 'N/A';
update listings_with_reviews set host_response_rate = '0%' where host_response_rate = 'N/A';
update listings_with_reviews set host_acceptance_rate = rtrim(host_acceptance_rate,'%');
update listings_with_reviews set host_response_rate = rtrim(host_response_rate,'%');
update listings_with_reviews set price = '$0' where price is null;
update listings_with_reviews set security_deposit = '$0' where security_deposit is null;
update listings_with_reviews set cleaning_fee = '$0' where cleaning_fee is null;
update listings_with_reviews set extra_people = '$0' where extra_people is null;
update listings_with_reviews set review_scores_rating = 0 where review_scores_rating is null;
update listings_with_reviews set bathrooms = 0 where bathrooms is null;
update listings_with_reviews set bedrooms = 0 where bedrooms is null;
update listings_with_reviews set beds = 0 where beds is null;
update listings_with_reviews set price = ltrim(price, '$');
update listings_with_reviews set security_deposit = ltrim(security_deposit, '$');
update listings_with_reviews set cleaning_fee = ltrim(cleaning_fee, '$');
update listings_with_reviews set extra_people = ltrim(extra_people, '$');
update listings_with_reviews set price = translate(price, ',', '');
update listings_with_reviews set security_deposit = translate(security_deposit, ',', '');
update listings_with_reviews set cleaning_fee = translate(cleaning_fee, ',', '');
update listings_with_reviews set extra_people = translate(extra_people, ',', '');

ALTER TABLE listings_with_reviews
ALTER COLUMN host_response_rate TYPE INT
USING host_response_rate::integer;

ALTER TABLE listings_with_reviews
ALTER COLUMN host_acceptance_rate TYPE INT
USING host_acceptance_rate::integer;

ALTER TABLE listings_with_reviews
ALTER COLUMN price TYPE FLOAT
USING price::FLOAT;

ALTER TABLE listings_with_reviews
ALTER COLUMN security_deposit TYPE FLOAT
USING security_deposit::FLOAT;

ALTER TABLE listings_with_reviews
ALTER COLUMN cleaning_fee TYPE FLOAT
USING cleaning_fee::FLOAT;

ALTER TABLE listings_with_reviews
ALTER COLUMN extra_people TYPE FLOAT
USING extra_people::FLOAT;

-- Drop the amenities and last_review columns as they are no longer needed
-- -----------------------------------------------------------------------
alter table listings_with_reviews drop column last_review;
alter table listings_with_reviews drop column amenities;